package com.bt.om.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.RowBounds;

import com.bt.om.entity.ProductInfo;
import com.bt.om.entity.UserOrder;

public interface UserOrderMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_order
	 * @mbg.generated  Sat Nov 17 21:53:08 CST 2018
	 */
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_order
	 * @mbg.generated  Sat Nov 17 21:53:08 CST 2018
	 */
	int insert(UserOrder record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_order
	 * @mbg.generated  Sat Nov 17 21:53:08 CST 2018
	 */
	int insertSelective(UserOrder record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_order
	 * @mbg.generated  Sat Nov 17 21:53:08 CST 2018
	 */
	UserOrder selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_order
	 * @mbg.generated  Sat Nov 17 21:53:08 CST 2018
	 */
	int updateByPrimaryKeySelective(UserOrder record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_order
	 * @mbg.generated  Sat Nov 17 21:53:08 CST 2018
	 */
	int updateByPrimaryKey(UserOrder record);

	void updateRewardStatus(UserOrder userOrder);

	List<UserOrder> selectByMobile(String mobile);
	
	List<UserOrder> selectAllOrderByMobile(String mobile);
	
	void updateStatus2(UserOrder userOrder);
	
	List<UserOrder> selectUnCheckOrderTaobao(UserOrder userOrder);
	
	List<UserOrder> selectUnCheckOrderJd(UserOrder userOrder);
	
	List<UserOrder> selectUnSuccessOrder(Map<String, Object> map);
	
	int getAllListCount(Map<String, Object> searchMap);
	
	List<Map<String, Object>> getAllList(Map<String, Object> searchMap, RowBounds rowBounds);
	
	List<UserOrder> findByMobile(String mobile);
	
	List<UserOrder> selectByInviteCode(String taInviteCode);
	
	int selectByMobileAndOrderStatusCount(Map<String, Object> searchMap);

    List<UserOrder> selectByMobileAndOrderStatusList(Map<String, Object> searchMap, RowBounds rowBounds);
    
    int getByInviteCodeCount(Map<String, Object> searchMap);

    List<UserOrder> getByInviteCodeList(Map<String, Object> searchMap, RowBounds rowBounds);
    
    List<UserOrder> selectPicUrlIsNull();
    
    List<UserOrder> selectTaoBaoOrderByMobile(String mobile);
    
    //手工统计订单返现
    List<UserOrder> selectManualOrderFanli(Map<String, String> map);
    //手工统计订单奖励
    List<UserOrder> selectManualOrderJiangli(Map<String, String> map);
    
    List<UserOrder> selectEstimateOrderFanli(Map<String, String> map);
    
    List<UserOrder> selectEstimateOrderJiangli(Map<String, String> map);
    
}